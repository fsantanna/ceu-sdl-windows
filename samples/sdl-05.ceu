#include "c.ceu"
#include "sdl/sdl.ceu"

var SDL_Color bg = val SDL_Color(0x00,0x00,0x00,0xFF);

var&? SDL_Init sdl = spawn SDL_Init("SDL 5", 800,480, bg);
watching sdl do
    par do
        var& _Mix_Chunk snd = &_Mix_LoadWAV("samples/click1.wav")
            finalize (snd) with
                _Mix_FreeChunk(&&snd);
            end
        every 5s do
            _Mix_PlayChannel(-1, &&snd, 0);
        end
    with
        var SDL_Rect img_r = val SDL_Rect(100,100, 20,20);
        var& _SDL_Texture img_tex =
            &_IMG_LoadTexture(&&sdl!.ren, "samples/img.png")
                finalize (img_tex) with
                    _SDL_DestroyTexture(&&img_tex);
                end;

        var SDL_Rect str_r = val SDL_Rect(10,10, 200,20);
        var& _SDL_Texture str_tex;
        do
            var& _TTF_Font fnt =
                &_TTF_OpenFont("samples/Deutsch.ttf", 40)
                    finalize (fnt) with
                        _TTF_CloseFont(&&fnt);
                    end;

            var& _SDL_Surface sfc =
                &_TTF_RenderText_Blended(&&fnt, "Hello world!",
                                         {(SDL_Color){0xFF,0xFF,0xFF,0xFF}})
                    finalize (sfc) with
                        _SDL_FreeSurface(&&sfc);
                    end

            do
                str_tex = &_SDL_CreateTextureFromSurface(&&sdl!.ren, &&sfc);
            finalize (str_tex) with
                //_SDL_DestroyTexture(str_tex);
            end
        end
        do finalize with
            _SDL_DestroyTexture(&&str_tex);
        end

        par do
            var _SDL_KeyboardEvent&& key;
            every key in SDL_KEYDOWN do
                if key:keysym.sym == _SDLK_RIGHT then
                    img_r.x = img_r.x + 10;
                end
            end
        with
            every SDL_REDRAW do
                _SDL_RenderCopy(&&sdl!.ren, &&img_tex, null, &&img_r as _SDL_Rect&&);
                _SDL_RenderCopy(&&sdl!.ren, &&str_tex, null, &&str_r as _SDL_Rect&&);
            end
        end
    end
end

escape 0;
